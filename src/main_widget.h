// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef main_widget_h
#define main_widget_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Hold_Browser.H>

class myList : public Fl_Hold_Browser {
public:
  myList(int x, int y, int w, int h, const char *str=0) ;
  int handle(int e);
};

class myWindow : public Fl_Double_Window {
public:
  int event_enabled;
  myWindow(int w, int h, const char *str=0) ;
  int handle(int e);
};
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Input.H>

class NavigateurDlg {
public:
  char *navigateur_par_defaut;
private:
  int ret;
public:
  NavigateurDlg();
  Fl_Double_Window *MainWindow;
  Fl_Button *ok;
private:
  void cb_ok_i(Fl_Button*, void*);
  static void cb_ok(Fl_Button*, void*);
public:
  Fl_Button *cancel;
private:
  void cb_cancel_i(Fl_Button*, void*);
  static void cb_cancel(Fl_Button*, void*);
public:
  Fl_Group *box;
  Fl_Box *label;
  Fl_Input *nom;
private:
  void cb_Par_i(Fl_Button*, void*);
  static void cb_Par(Fl_Button*, void*);
public:
  int show(int x, int y);
  ~NavigateurDlg();
};
#include <FL/Fl_Browser.H>

class Credit {
public:
  Credit();
  Fl_Double_Window *MainWindow;
  Fl_Group *group;
  Fl_Browser *view;
private:
  void cb_Ok_i(Fl_Button*, void*);
  static void cb_Ok(Fl_Button*, void*);
public:
  void show();
  void add(const char *str);
  ~Credit();
};
#include <FL/Fl_Help_View.H>

class Interface {
public:
  myWindow* make_main_window();
  myWindow *MainWindow;
  Fl_Input *input;
  Fl_Button *effacer_mot;
  Fl_Button *precedent;
  Fl_Button *suivant;
  Fl_Button *little;
  Fl_Button *big;
  Fl_Button *ouvrir_options;
  Fl_Button *exporter_html;
  Fl_Button *about;
  Fl_Button *quitter;
  Fl_Button *classement_par_theme;
  myList *list;
  Fl_Help_View *output;
  Fl_Double_Window* make_about();
  Fl_Button *fermer_about;
  Fl_Box *petit_readme2;
  Fl_Box *label_version;
  Fl_Box *petit_readme;
  Fl_Box *label_auteur;
  Fl_Box *label_email;
  Fl_Box *label_url;
  Fl_Button *show_news;
  Fl_Button *show_credit;
  Fl_Button *show_contrib;
  Fl_Double_Window* make_news();
  Fl_Browser *news_list;
  Fl_Button *news_ok;
  Fl_Double_Window* make_config_window();
  Fl_Button *fermer_options;
  Fl_Button *config_navigateur;
  Fl_Button *config_couleurs;
  Fl_Button *config_autre;
};
#include <FL/Fl_Progress.H>

class LoadingDlg {
public:
  LoadingDlg();
  myWindow *MainWindow;
  Fl_Progress *progress;
  void reset();
  ~LoadingDlg();
};
#include <FL/Fl_Round_Button.H>

class SelectionCouleur {
public:
  int couleur;
  SelectionCouleur();
  Fl_Double_Window *MainWindow;
  Fl_Box *label;
private:
  void cb_Ok1_i(Fl_Button*, void*);
  static void cb_Ok1(Fl_Button*, void*);
  void cb_Annuler_i(Fl_Button*, void*);
  static void cb_Annuler(Fl_Button*, void*);
public:
  Fl_Round_Button *couleur_verte;
  Fl_Round_Button *couleur_rouge;
  Fl_Round_Button *couleur_bleu;
  Fl_Round_Button *couleur_jaune;
  int show(int sel);
private:
  int get_couleur_selectionnee();
public:
  ~SelectionCouleur();
};
#include <FL/Fl_Check_Button.H>

class AutreOptionDlg {
  int ret;
public:
  AutreOptionDlg();
  Fl_Double_Window *MainWindow;
  Fl_Button *ok;
private:
  void cb_ok1_i(Fl_Button*, void*);
  static void cb_ok1(Fl_Button*, void*);
public:
  Fl_Button *cancel;
private:
  void cb_cancel1_i(Fl_Button*, void*);
  static void cb_cancel1(Fl_Button*, void*);
public:
  Fl_Check_Button *check_fenetre_centree;
  Fl_Check_Button *check_souvenir;
  Fl_Check_Button *check_hide_splash;
  int show(int x, int y);
  ~AutreOptionDlg();
};
#include <FL/Fl_Check_Browser.H>

class SelectionThemeMot {
public:
  int ret;
  SelectionThemeMot();
  Fl_Double_Window *MainWindow;
private:
  void cb_Ok2_i(Fl_Button*, void*);
  static void cb_Ok2(Fl_Button*, void*);
  void cb_Annuler1_i(Fl_Button*, void*);
  static void cb_Annuler1(Fl_Button*, void*);
public:
  Fl_Check_Browser *list;
private:
  void cb_Tout_i(Fl_Button*, void*);
  static void cb_Tout(Fl_Button*, void*);
  void cb_Tout1_i(Fl_Button*, void*);
  static void cb_Tout1(Fl_Button*, void*);
public:
  int show();
  ~SelectionThemeMot();
};

class ContribWindow {
public:
  ContribWindow();
  Fl_Double_Window *MainWindow;
private:
  void cb_Fermer_i(Fl_Button*, void*);
  static void cb_Fermer(Fl_Button*, void*);
public:
  ~ContribWindow();
  void show();
};
#endif
